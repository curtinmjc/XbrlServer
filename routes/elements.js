// Generated by CoffeeScript 1.9.2
(function() {
  var JSONStream, express, getCloudantUrl, request, rotateText, router;

  express = require('express');

  JSONStream = require('JSONStream');

  request = require('request');

  getCloudantUrl = require('./helpers').getCloudantUrl;

  router = express.Router();

  rotateText = function(text, rotation) {
    var bound;
    bound = 0x10000;
    rotation = parseInt(rotation) % bound;
    if (rotation === 0) {
      return text;
    }
    return String.fromCharCode.apply(null, text.split('').map(function(v) {
      return (v.charCodeAt() + rotation + bound) % bound;
    }));
  };

  router.get(/\/elements/, function(req, res) {
    var cloudantUri, identifier, term;
    identifier = req.query.identifier;
    term = req.query.term;
    cloudantUri = (getCloudantUrl()) + "/factsdev/_design/factsMainSearchIndexes/_search/EntitySplitConcept?q=entity:\"" + identifier + "\"%20AND%20conceptNameSplit:" + term + "&counts=[\"conceptNameSplit\"]&limit=0";
    return request({
      url: cloudantUri
    }).pipe(JSONStream.parse('counts.conceptNameSplit')).on('data', function(data) {
      var i, k, key, keys, len, name, prefix, results, v;
      keys = [];
      for (k in data) {
        v = data[k];
        keys.push(k);
      }
      keys.sort(function(a, b) {
        return data[b] - data[a];
      });
      results = [];
      for (i = 0, len = keys.length; i < len; i++) {
        key = keys[i];
        prefix = rotateText(key.substring(0, key.indexOf(' ')), -325);
        name = key.substring(key.indexOf(' ') + 1, key.length).replace(/\s/g, "");
        results.push(prefix + ':' + name);
      }
      return res.end(JSON.stringify(results));
    });
  });

  module.exports = router;

}).call(this);

//# sourceMappingURL=elements.js.map
