// Generated by CoffeeScript 1.9.2
(function() {
  exports.Fact = (function() {
    function Fact(doc1) {
      this.doc = doc1;
      this.IsDuration = doc['http://www.xbrl.org/2003/instance/Period'].indexOf('--') >= 0;
      this.IsNil = JSON.parse(doc["http://www.w3.org/2001/XMLSchema-instance/nil"]);
      this.StartDate = this.IsDuration ? new Date(doc['http://www.xbrl.org/2003/instance/Period'].split('--')[0]) : new Date(doc['http://www.xbrl.org/2003/instance/Period']);
      this.EndDate = this.IsDuration ? new Date(doc['http://www.xbrl.org/2003/instance/Period'].split('--')[1]) : new Date(doc['http://www.xbrl.org/2003/instance/Period']);
      this.FilingDate = new Date(doc['http://www.sec.gov/Archives/edgar/filingDate']);
      this.Amendment = JSON.parse(doc['http://xbrl.sec.gov/Amendment']);
      this.Value = JSON.parse(this.doc['http://www.xbrl.org/2003/instance/Value']);
      this.CIK = this.doc['http://www.xbrl.org/2003/instance/Entity'].substring(this.doc['http://www.xbrl.org/2003/instance/Entity'].lastIndexOf('/') + 1, this.doc['http://www.xbrl.org/2003/instance/Entity'].length);
      this.URL = this.doc['http://www.sec.gov/Archives/edgar/url'];
      this.AccesssionNumber = this.doc['http://www.sec.gov/Archives/edgar/accessionNumber'];
    }

    Fact.prototype.getValue = function(fqn) {
      return fqn.substring(fqn.lastIndexOf("/") + 1, fqn.length);
    };

    Fact.prototype.GetUnitDescription = function() {
      var denominator, i, j, len, len1, numerator, ref, ref1;
      if (this.unitDescription != null) {
        return this.unitDescription;
      }
      this.unitDescription = '';
      if (this.doc['http://www.xbrl.org/2003/instance/Unit']['http://www.xbrl.org/2003/instance/unitNumerator'] != null) {
        ref = this.doc['http://www.xbrl.org/2003/instance/Unit']['http://www.xbrl.org/2003/instance/unitNumerator'];
        for (i = 0, len = ref.length; i < len; i++) {
          numerator = ref[i];
          this.unitDescription += this.getValue(numerator) + '*';
        }
        this.unitDescription = this.unitDescription.substring(0, this.unitDescription.length - 1);
        if (this.doc['http://www.xbrl.org/2003/instance/Unit']['http://www.xbrl.org/2003/instance/unitDenominator'] != null) {
          this.unitDescription += '/';
          ref1 = this.doc['http://www.xbrl.org/2003/instance/Unit']['http://www.xbrl.org/2003/instance/unitDenominator'];
          for (j = 0, len1 = ref1.length; j < len1; j++) {
            denominator = ref1[j];
            this.unitDescription += this.getValue(denominator) + '*';
          }
          this.unitDescription = this.unitDescription.substring(0, this.unitDescription.length - 1);
        }
      } else {
        this.unitDescription = this.getValue(this.doc['http://www.xbrl.org/2003/instance/Unit']);
      }
      return this.unitDescription;
    };

    Fact.prototype.GetDimensions = function() {
      var k, ref, v;
      if (this.dimensions != null) {
        return this.dimenions;
      }
      this.dimensions = {};
      ref = this.doc;
      for (k in ref) {
        v = ref[k];
        if (k !== "http://www.xbrl.org/2003/instance/Entity" && k !== "http://www.xbrl.org/2003/instance/Concept" && k !== "http://www.xbrl.org/2003/instance/Period" && k !== "http://www.xbrl.org/2003/instance/Unit" && k !== "http://www.w3.org/2001/XMLSchema-instance/nil" && k !== "http://www.xbrl.org/2003/instance/Value" && k !== "http://www.xbrl.org/2003/instance/Decimals" && k !== "http://www.xbrl.org/2003/instance/Precision" && k !== "http://www.sec.gov/Archives/edgar/companyName" && k !== "http://www.sec.gov/Archives/edgar/filingDate" && k !== "http://www.sec.gov/Archives/edgar/accessionNumber" && k !== "http://www.sec.gov/Archives/edgar/fileNumber" && k !== "http://www.sec.gov/Archives/edgar/url" && k !== "http://xbrl.sec.gov/Amendment" && k !== "http://xbrl.sec.gov/FiscalYear" && k !== "http://xbrl.sec.gov/FiscalPeriod" && k !== "_id" && k !== "_rev") {
          this.dimensions[k] = v;
        }
      }
      return this.dimensions;
    };

    Fact.prototype.GetHashValue = function() {
      var hashValues, i, k, len, ref, v, value;
      if (this.hashValue != null) {
        return this.hashValue;
      }
      hashValues = [];
      ref = this.doc;
      for (k in ref) {
        v = ref[k];
        if (k !== "http://www.w3.org/2001/XMLSchema-instance/nil" && k !== "http://www.xbrl.org/2003/instance/Value" && k !== "http://www.xbrl.org/2003/instance/Decimals" && k !== "http://www.xbrl.org/2003/instance/Precision" && k !== "http://www.sec.gov/Archives/edgar/companyName" && k !== "http://www.sec.gov/Archives/edgar/filingDate" && k !== "http://www.sec.gov/Archives/edgar/accessionNumber" && k !== "http://www.sec.gov/Archives/edgar/fileNumber" && k !== "http://www.sec.gov/Archives/edgar/url" && k !== "http://xbrl.sec.gov/Amendment" && k !== "http://xbrl.sec.gov/FiscalYear" && k !== "http://xbrl.sec.gov/FiscalPeriod" && k !== "_id" && k !== "_rev") {
          hashValues.push(v);
        }
      }
      this.hashValue = '';
      hashValues.sort();
      for (i = 0, len = hashValues.length; i < len; i++) {
        value = hashValues[i];
        this.hashValue += value;
      }
      return this.hashValue;
    };

    Fact.prototype.GetPeriodDescription = function() {
      var diff;
      if (this.periodDescription != null) {
        return this.periodDescription;
      }
      diff = Math.ceil((this.EndDate.getTime() - this.StartDate.getTime()) / 86400000);
      if (diff === 365 || diff === 364) {
        this.periodDescription = "annual";
      } else if (diff > 80 && diff < 100) {
        this.periodDescription = "quarterly";
      } else {
        this.periodDescription = "other";
      }
      return this.periodDescription;
    };

    Fact.prototype.GetDimensionsDescription = function() {
      var k, ref, v;
      if (this.dimensionsDescription != null) {
        return this.dimensionsDescription;
      }
      this.dimensionsDescription = '';
      ref = this.GetDimensions();
      for (k in ref) {
        v = ref[k];
        this.dimensionsDescription += this.getValue(k) + '->' + this.getValue(v) + '<br/>';
      }
      this.dimensionsDescription = this.dimensionsDescription.substring(0, this.dimensionsDescription.length - 5);
      return this.dimensionsDescription;
    };

    Fact.prototype.GetSeriesDescription = function() {
      if (this.seriesDescription != null) {
        return this.seriesDescription;
      }
      this.seriesDescription = '[' + this.doc['http://www.sec.gov/Archives/edgar/companyName'] + "]:" + this.getValue(this.doc['http://www.xbrl.org/2003/instance/Concept']) + (!this.IsDuration ? "" : " -- " + this.GetPeriodDescription()) + (this.GetDimensionsDescription() !== '' ? "<br/>" + this.GetDimensionsDescription() : "");
      return this.seriesDescription;
    };

    Fact.prototype.GetSeriesKey = function() {
      if (this.seriesKey != null) {
        return this.seriesKey;
      }
      this.seriesKey = this.doc['http://www.xbrl.org/2003/instance/Entity'] + ":" + this.getValue(this.doc['http://www.xbrl.org/2003/instance/Concept']) + (!this.IsDuration ? "" : " -- " + this.GetPeriodDescription()) + (this.GetDimensionsDescription() !== '' ? " -- " + this.GetDimensionsDescription() : "");
      return this.seriesKey;
    };

    Fact.prototype.GetSortValue = function(OtherFact) {
      if (this.EndDate < OtherFact.EndDate) {
        return -1;
      }
      if (this.EndDate > OtherFact.EndDate) {
        return 1;
      }
      return 0;
    };

    return Fact;

  })();

}).call(this);

//# sourceMappingURL=Fact.js.map
